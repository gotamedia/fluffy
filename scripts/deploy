#!/usr/bin/env bash
#===================================================================================
#
#         FILE: deploy
#
#  DESCRIPTION: Deploys the application to the AWS cloud.
#       AUTHOR: Gota Media
#      COMPANY: Gota Media AB
#===================================================================================

set -e

echo "Create needed resources..."
aws cloudformation deploy \
                --template-file "aws/template.yml" \
                --stack-name "${REPO_SLUG,,}" \
                --capabilities CAPABILITY_IAM \
                --no-fail-on-empty-changeset \
                --parameter-overrides \
                  CertificateARN="${CERTIFICATE_ARN}" \
                  DomainName="${DOMAIN_NAME}" \
                --tags \
                  AppId=${APP_ID} \
                  AppName=${REPO_SLUG} \
                  CostBearer=${COST_BEARER} \
                  CostCenter=${COST_CENTER} \
                  Environment=${ENVIRONMENT} \
                  Owner=${OWNER} \
                  Role=${ROLE} \
                  SLA=${SLA}

echo "Get S3 Bucket name..."
S3_BUCKET=$(aws cloudformation describe-stacks \
                --stack-name "${REPO_SLUG,,}" \
                --query "Stacks[0].Outputs[?OutputKey=='S3BucketName'].OutputValue" \
                --output text)

echo "Copying files to bucket..."
aws s3 sync ./storybook-static s3://${S3_BUCKET} --delete --no-progress

echo "Getting Cloudfront distribution ID and invalidate cache..."
DISTRIBUTION_ID=$(aws cloudformation describe-stacks \
                --stack-name "${REPO_SLUG,,}" \
                --query "Stacks[0].Outputs[?OutputKey=='DistributionId'].OutputValue" \
                --output text)

aws cloudfront create-invalidation \
                --distribution-id ${DISTRIBUTION_ID} \
                --paths "/*"

echo "Deploy done..."
